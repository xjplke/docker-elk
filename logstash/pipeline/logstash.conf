input {
  snmp {
    hosts => [{host => "udp:192.168.100.10/161" community => "public" version => "2c"  retries => 2  timeout => 1000}]
    tables => [ {"name" => "interfaces" "columns" => ["1.3.6.1.2.1.2.2.1.1", "1.3.6.1.2.1.2.2.1.2", "1.3.6.1.2.1.2.2.1.5", "1.3.6.1.2.1.2.2.1.6", ".1.3.6.1.2.1.2.2.1.10", ".1.3.6.1.2.1.2.2.1.16"]} ]
  }
}

filter {
  prune {
    whitelist_names => [ "^@timestamp$", "^host$", "^interfaces$" ]
  }

  split {
    field => "interfaces"
  }

  ruby{
    code => '
      event.set("ifDescr", event.get("[interfaces][iso.org.dod.internet.mgmt.mib-2.interfaces.ifTable.ifEntry.ifDescr]"))
      event.set("ifInOctets", event.get("[interfaces][iso.org.dod.internet.mgmt.mib-2.interfaces.ifTable.ifEntry.ifInOctets]"))
      event.set("ifIndex", event.get("[interfaces][iso.org.dod.internet.mgmt.mib-2.interfaces.ifTable.ifEntry.ifIndex]"))
      event.set("ifOutOctets", event.get("[interfaces][iso.org.dod.internet.mgmt.mib-2.interfaces.ifTable.ifEntry.ifOutOctets]"))
      event.set("ifPhysAddress", event.get("[interfaces][iso.org.dod.internet.mgmt.mib-2.interfaces.ifTable.ifEntry.ifPhysAddress]"))
      event.set("ifSpeed", event.get("[interfaces][iso.org.dod.internet.mgmt.mib-2.interfaces.ifTable.ifEntry.ifSpeed]"))
    '
  }

  mutate {
    remove_field => [ "interfaces" ]
    add_field => { "hostIfIndex" => "%{host}_%{ifIndex}" }
  }

  aggregate {
    task_id => "%{hostIfIndex}"
    code => "
      map['lastInOctets'] ||= 0;
      map['lastOutOctets'] ||= 0;
      map['lastTime'] ||= Time.local(2008, 7, 8);
      event.set('deltaInOctets', event.get('ifInOctets') - map['lastInOctets']);
      event.set('deltaOutOctets', event.get('ifOutOctets') - map['lastOutOctets']);
      event.set('deltaTime', event.get('@timestamp') - map['lastTime']);
      event.set('ifInWidth', (event.get('ifInOctets') - map['lastInOctets']) / (event.get('@timestamp') - map['lastTime']));
      event.set('ifOutwidth', (event.get('ifOutOctets') - map['lastOutOctets']) / (event.get('@timestamp') - map['lastTime'])); 
      map['lastInOctets'] = event.get('ifInOctets');
      map['lastOutOctets'] = event.get('ifOutOctets');
      map['lastTime'] = event.get('@timestamp');
    "
    timeout => 600
    timeout_task_id_field => "hostIfIndex"
  }
}

output {
  elasticsearch {
       hosts => "elasticsearch:9200"
       index => "ifinfo"
       document_id => "%{hostIfIndex}"
       user => "elastic"
       password => "changeme"
  }
  stdout { codec => rubydebug }
}

